@Library('piper-lib-os') _


pipeline {
    agent any
    stages {
        stage("prepare") {
            steps {
                deleteDir()
                checkout scm
                setupCommonPipelineEnvironment script: this
                script {
					env.BRANCH_NAME = "${env.GIT_BRANCH}"			                    
				    }
                 }
              } 
         stage('build') {
         	steps {
            	echo "${env.GIT_BRANCH}"          
               mtaBuild script: this, mtaBuildTool: 'cloudMbt'
            }
        }
    
        stage('Nexus deploy'){
        	when{
         	    expression {
         	        env.GIT_BRANCH == "origin/develop"
         	  } 
         	 } 	
        	steps{           	        	
        	    nexusPublisher nexusInstanceId: 'localnexus', nexusRepositoryId: 'maven-releases', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: '/var/jenkins_home/workspace/'+ env.JOB_NAME +'/ci_test_project.mtar']], mavenCoordinate: [artifactId: 'jenkins-mtar', groupId: 'org.jenkins-CF.main', packaging: '.mtar', version: '1.' + env.BUILD_NUMBER]]]
        		}        		
			}
		stage('Deploy on Dev'){
			when{
         	    expression {
         	        env.GIT_BRANCH == "origin/develop"
         	  } 
         	 }
		     steps{
		      	    cloudFoundryDeploy script:this, deployTool:'mtaDeployPlugin', verbose: true		
        		}
    		}
    	stage('Release'){
    	   steps{
    	    	echo("Stage: Release")
    	    	tmsUpload script:this, verbose: true, nodeName: 'Develop', credentialsId: 'TMS_Credential', mtaPath: 'ci_test_project.mtar', customDescription: 'Build Nr: '+ env.BUILD_NUMBER    	    
			}
		}	
	}	
}  